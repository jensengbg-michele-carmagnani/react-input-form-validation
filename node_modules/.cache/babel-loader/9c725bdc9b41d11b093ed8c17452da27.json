{"ast":null,"code":"var _jsxFileName = \"/Users/michelecarmagnani/Git/React/formProject/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const [enteredFirstName, setEnteredFirstName] = useState(\"\");\n  const [enteredFirstNameTouched, setEnteredFirstNameTouched] = useState(false);\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredLEmailTouched] = useState(false);\n  const firstNameIsValid = enteredFirstName.trim() !== \"\";\n  const inputFirstNameIsInvalid = !firstNameIsValid && enteredFirstNameTouched; // const lastIsValidIsValid = enteredLastName.trim() !== \"\";\n  // const emailIsValid = enteredEmail.includes(\"@\");\n\n  let formIsValid = false;\n\n  if (inputFirstNameIsInvalid) {\n    formIsValid = true;\n  }\n\n  const firstNameChangeHandler = event => {\n    setEnteredFirstName(event.target.value);\n  };\n\n  const inputFirstNameBlurHandler = event => {\n    setEnteredFirstNameTouched(true);\n  };\n\n  const lastNameChangeHandler = event => {\n    setEnteredLastNameTouched(event.target.value);\n  };\n\n  const inputLastNameChangeHandler = () => {\n    setEnteredFirstNameTouched(true);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (!inputFirstNameIsInvalid) {\n      return;\n    }\n\n    setEnteredFirstName(\"\");\n    setEnteredFirstNameTouched(false);\n  };\n\n  const inputFirstNameClasses = inputFirstNameIsInvalid ? \"form-control invalid \" : \" form-control\";\n  const inputLastNameClasses = inputFirstNameIsInvalid ? \"form-control invalid \" : \" form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: inputFirstNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: firstNameChangeHandler,\n          onBlur: inputFirstNameBlurHandler,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), inputFirstNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: inputLastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          onBlur: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), inputLastNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Last name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"FI+UchOGbBaP8TurXK4/Xdaf3wM=\");\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/michelecarmagnani/Git/React/formProject/src/components/BasicForm.js"],"names":["useState","BasicForm","props","enteredFirstName","setEnteredFirstName","enteredFirstNameTouched","setEnteredFirstNameTouched","enteredLastName","setEnteredLastName","enteredLastNameTouched","setEnteredLastNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredLEmailTouched","firstNameIsValid","trim","inputFirstNameIsInvalid","formIsValid","firstNameChangeHandler","event","target","value","inputFirstNameBlurHandler","lastNameChangeHandler","inputLastNameChangeHandler","formSubmitHandler","preventDefault","inputFirstNameClasses","inputLastNameClasses","inputLastNameIsInvalid"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CJ,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACK,uBAAD,EAA0BC,0BAA1B,IAAwDN,QAAQ,CAAC,KAAD,CAAtE;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACS,sBAAD,EAAyBC,yBAAzB,IAAsDV,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,mBAAD,EAAsBC,uBAAtB,IAAiDd,QAAQ,CAAC,KAAD,CAA/D;AAEA,QAAMe,gBAAgB,GAAGZ,gBAAgB,CAACa,IAAjB,OAA4B,EAArD;AACA,QAAMC,uBAAuB,GAAG,CAACF,gBAAD,IAAqBV,uBAArD,CAT2B,CAW3B;AACA;;AACA,MAAIa,WAAW,GAAG,KAAlB;;AAEA,MAAID,uBAAJ,EAA6B;AAC3BC,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,QAAMC,sBAAsB,GAAIC,KAAD,IAAW;AACxChB,IAAAA,mBAAmB,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AACD,GAFD;;AAIA,QAAMC,yBAAyB,GAAIH,KAAD,IAAW;AAC3Cd,IAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACD,GAFD;;AAIA,QAAMkB,qBAAqB,GAAIJ,KAAD,IAAW;AACvCV,IAAAA,yBAAyB,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAzB;AACD,GAFD;;AAIA,QAAMG,0BAA0B,GAAE,MAAI;AACpCnB,IAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACD,GAFD;;AAIA,QAAMoB,iBAAiB,GAAIN,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACO,cAAN;;AAEA,QAAI,CAACV,uBAAL,EAA8B;AAC5B;AACD;;AACDb,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAE,IAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACD,GARD;;AAUA,QAAMsB,qBAAqB,GAAGX,uBAAuB,GACnD,uBADmD,GAEnD,eAFF;AAGA,QAAMY,oBAAoB,GAAGZ,uBAAuB,GAClD,uBADkD,GAElD,eAFF;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAES,iBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEE,qBAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAET,sBADZ;AAEE,UAAA,MAAM,EAAEI,yBAFV;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,EAAE,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA,gBAFF,EAQIN,uBAAuB,iBAC3B;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAEY,oBAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,MAAtB;AAA6B,UAAA,QAAQ,EAAEL,qBAAvC;AAA8D,UAAA,MAAM;AAApE;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGM,sBAAsB,iBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAH9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAS,QAAA,IAAI,EAAC,MAAd;AAAqB,QAAA,EAAE,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eAwBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACZ,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAlFD;;GAAMjB,S;;KAAAA,S;AAoFN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\n\nconst BasicForm = (props) => {\n  const [enteredFirstName, setEnteredFirstName] = useState(\"\");\n  const [enteredFirstNameTouched, setEnteredFirstNameTouched] = useState(false);\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredLEmailTouched] = useState(false);\n\n  const firstNameIsValid = enteredFirstName.trim() !== \"\";\n  const inputFirstNameIsInvalid = !firstNameIsValid && enteredFirstNameTouched;\n\n  // const lastIsValidIsValid = enteredLastName.trim() !== \"\";\n  // const emailIsValid = enteredEmail.includes(\"@\");\n  let formIsValid = false;\n\n  if (inputFirstNameIsInvalid) {\n    formIsValid = true;\n  }\n\n  const firstNameChangeHandler = (event) => {\n    setEnteredFirstName(event.target.value);\n  };\n\n  const inputFirstNameBlurHandler = (event) => {\n    setEnteredFirstNameTouched(true);\n  };\n\n  const lastNameChangeHandler = (event) => {\n    setEnteredLastNameTouched(event.target.value)\n  }\n\n  const inputLastNameChangeHandler= ()=>{\n    setEnteredFirstNameTouched(true)\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (!inputFirstNameIsInvalid) {\n      return;\n    }\n    setEnteredFirstName(\"\");\n    setEnteredFirstNameTouched(false);\n  };\n\n  const inputFirstNameClasses = inputFirstNameIsInvalid \n  ? \"form-control invalid \"\n  : \" form-control\";\n  const inputLastNameClasses = inputFirstNameIsInvalid \n  ? \"form-control invalid \"\n  : \" form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={inputFirstNameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            onChange={firstNameChangeHandler}\n            onBlur={inputFirstNameBlurHandler}\n            type=\"text\"\n            id=\"name\"\n          />\n           {inputFirstNameIsInvalid && (\n        <p className=\"error-text\">Name must not be empty.</p>\n      )}\n        </div>\n        <div className={inputLastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input type=\"text\" id=\"name\" onChange={lastNameChangeHandler} onBlur/>\n          {inputLastNameIsInvalid && (<p>Last name must not be empty.</p>)}\n        </div>\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input   type=\"text\" id=\"name\" />\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}