{"ast":null,"code":"var _jsxFileName = \"/Users/michelecarmagnani/Git/React/formProject/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const nameInputRef = useRef();\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim() == \"\") {}\n\n    console.log(enteredName); // re-set the input \n\n    setEnteredName(''); // using ref\n\n    const enteredValue = nameInputRef.current.value;\n    console.log('ref', enteredValue); // reset input => NOT IDEAL, DON'T MANIPULATE THE DOM DIRECTLY \n\n    nameInputRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"gTkTQU7a3N23wiDN2/y+iDwJLIc=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/michelecarmagnani/Git/React/formProject/src/components/SimpleInput.js"],"names":["React","useRef","useState","SimpleInput","props","enteredName","setEnteredName","nameInputRef","nameInputChangeHandler","event","target","value","formSubmitHandler","preventDefault","trim","console","log","enteredValue","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAsBC,QAAtB,QAAqC,OAArC;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMK,YAAY,GAAGN,MAAM,EAA3B;;AACA,QAAMO,sBAAsB,GAAGC,KAAD,IAAW;AACvCH,IAAAA,cAAc,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAGH,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAGR,WAAW,CAACS,IAAZ,MAAsB,EAAzB,EAA4B,CAE3B;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ,EALkC,CAOlC;;AACAC,IAAAA,cAAc,CAAC,EAAD,CAAd,CARkC,CAUlC;;AACA,UAAMW,YAAY,GAAGV,YAAY,CAACW,OAAb,CAAqBP,KAA1C;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBC,YAAlB,EAZkC,CAclC;;AACAV,IAAAA,YAAY,CAACW,OAAb,CAAqBP,KAArB,GAA6B,EAA7B;AACD,GAhBD;;AAmBA,sBACE;AAAM,IAAA,QAAQ,EAAEC,iBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,GAAG,EAAEL,YAAZ;AAA0B,QAAA,IAAI,EAAC,MAA/B;AAAsC,QAAA,EAAE,EAAC,MAAzC;AAAgD,QAAA,QAAQ,EAAEC;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvCD;;GAAML,W;;KAAAA,W;AAyCN,eAAeA,WAAf","sourcesContent":["import React,{useRef, useState} from 'react';\n\n\nconst SimpleInput = (props) => {\n\n  const [enteredName, setEnteredName] = useState(\"\")\n\n  const nameInputRef = useRef()\n  const nameInputChangeHandler =(event) => {\n    setEnteredName(event.target.value);\n  }\n\n  const formSubmitHandler =(event) => {\n    event.preventDefault();\n    if(enteredName.trim() == \"\"){\n      \n    }\n    console.log(enteredName)\n\n    // re-set the input \n    setEnteredName('')\n\n    // using ref\n    const enteredValue = nameInputRef.current.value;\n    console.log('ref',enteredValue)\n\n    // reset input => NOT IDEAL, DON'T MANIPULATE THE DOM DIRECTLY \n    nameInputRef.current.value = \"\"\n  }\n\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className='form-control'>\n        <label htmlFor='name'>Your Name</label>\n        <input ref={nameInputRef} type='text' id='name' onChange={nameInputChangeHandler} />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}