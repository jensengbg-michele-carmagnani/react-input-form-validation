{"ast":null,"code":"var _jsxFileName = \"/Users/michelecarmagnani/Git/React/formProject/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const [enteredFirstName, setEnteredFirstName] = useState(\"\");\n  const [enteredFirstNameTouched, setEnteredFirstNameTouched] = useState(false);\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredLEmailTouched] = useState(false); // DERIVING  validation form the state \n  //FIRST NAME\n\n  const firstNameIsValid = enteredFirstName.trim() !== \"\";\n  const inputFirstNameIsInvalid = !firstNameIsValid && enteredFirstNameTouched; // LAST NAME\n\n  const lastNameIsValid = enteredLastName.trim() !== \"\";\n  const inputLastNameIsInvalid = !lastNameIsValid && enteredLastNameTouched; // EMAIL \n\n  const emailIsValid = enteredEmail.includes(\"@\");\n  const inputEmailIsInvalid = !enteredEmail && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (inputFirstNameIsInvalid && inputLastNameIsInvalid) {\n    formIsValid = true;\n  }\n\n  const firstNameChangeHandler = event => {\n    setEnteredFirstName(event.target.value);\n  };\n\n  const inputFirstNameBlurHandler = event => {\n    setEnteredFirstNameTouched(true);\n  };\n\n  const lastNameChangeHandler = event => {\n    setEnteredLastName(event.target.value);\n  };\n\n  const inputLastNameBlurHandler = () => {\n    setEnteredLastNameTouched(true);\n  };\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailBlurHandler = event => {\n    setEnteredLEmailTouched(true);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (!inputFirstNameIsInvalid) {\n      return;\n    }\n\n    setEnteredFirstName(\"\");\n    setEnteredFirstNameTouched(false);\n  };\n\n  const inputFirstNameClasses = inputFirstNameIsInvalid ? \"form-control invalid \" : \" form-control\";\n  const inputLastNameClasses = inputLastNameIsInvalid ? \"form-control invalid \" : \" form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: inputFirstNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: firstNameChangeHandler,\n          onBlur: inputFirstNameBlurHandler,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), inputFirstNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: inputLastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          onChange: lastNameChangeHandler,\n          onBlur: inputLastNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), inputLastNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: emailBlurHandler,\n        onChange: emailChangeHandler,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"FI+UchOGbBaP8TurXK4/Xdaf3wM=\");\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/michelecarmagnani/Git/React/formProject/src/components/BasicForm.js"],"names":["useState","BasicForm","props","enteredFirstName","setEnteredFirstName","enteredFirstNameTouched","setEnteredFirstNameTouched","enteredLastName","setEnteredLastName","enteredLastNameTouched","setEnteredLastNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredLEmailTouched","firstNameIsValid","trim","inputFirstNameIsInvalid","lastNameIsValid","inputLastNameIsInvalid","emailIsValid","includes","inputEmailIsInvalid","formIsValid","firstNameChangeHandler","event","target","value","inputFirstNameBlurHandler","lastNameChangeHandler","inputLastNameBlurHandler","emailChangeHandler","emailBlurHandler","formSubmitHandler","preventDefault","inputFirstNameClasses","inputLastNameClasses"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nconst BasicForm = (props) => {\n  const [enteredFirstName, setEnteredFirstName] = useState(\"\");\n  const [enteredFirstNameTouched, setEnteredFirstNameTouched] = useState(false);\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredLEmailTouched] = useState(false);\n\n  // DERIVING  validation form the state \n  //FIRST NAME\n  const firstNameIsValid = enteredFirstName.trim() !== \"\";\n  const inputFirstNameIsInvalid = !firstNameIsValid && enteredFirstNameTouched;\n // LAST NAME\n  const lastNameIsValid = enteredLastName.trim() !== \"\";\n  const inputLastNameIsInvalid = !lastNameIsValid && enteredLastNameTouched\n// EMAIL \n   const emailIsValid = enteredEmail.includes(\"@\");\n   const inputEmailIsInvalid = !enteredEmail && enteredEmailTouched\n\n\n  let formIsValid = false;\n\n  if (inputFirstNameIsInvalid && inputLastNameIsInvalid) {\n    formIsValid = true;\n  }\n\n  const firstNameChangeHandler = (event) => {\n    setEnteredFirstName(event.target.value);\n  };\n\n  const inputFirstNameBlurHandler = (event) => {\n    setEnteredFirstNameTouched(true);\n  };\n\n  const lastNameChangeHandler = (event) => {\n    setEnteredLastName(event.target.value);\n  };\n\n  const inputLastNameBlurHandler = () => {\n    setEnteredLastNameTouched(true);\n  };\n\n  const emailChangeHandler=(event) => {\n    setEnteredEmail(event.target.value)\n  }\n  const emailBlurHandler = (event) => {\n    setEnteredLEmailTouched(true)\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (!inputFirstNameIsInvalid) {\n      return;\n    }\n    setEnteredFirstName(\"\");\n    setEnteredFirstNameTouched(false);\n  };\n\n  const inputFirstNameClasses = inputFirstNameIsInvalid\n    ? \"form-control invalid \"\n    : \" form-control\";\n  const inputLastNameClasses = inputLastNameIsInvalid\n    ? \"form-control invalid \"\n    : \" form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={inputFirstNameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            onChange={firstNameChangeHandler}\n            onBlur={inputFirstNameBlurHandler}\n            type=\"text\"\n            id=\"name\"\n          />\n          {inputFirstNameIsInvalid && (\n            <p className=\"error-text\">Name must not be empty.</p>\n          )}\n        </div>\n        <div className={inputLastNameClasses}>\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"lastName\"\n            onChange={lastNameChangeHandler}\n            onBlur={inputLastNameBlurHandler}\n          />\n          {inputLastNameIsInvalid && <p className=\"error-text\">Last name must not be empty.</p>}\n        </div>\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input onBlur={emailBlurHandler} onChange={emailChangeHandler} type=\"text\" id=\"name\" />\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}